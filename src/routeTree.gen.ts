/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as ProfileDemoRouteImport } from './routes/profile-demo'
import { Route as LogEntryRouteImport } from './routes/log-entry'
import { Route as CalendarSolutionsRouteImport } from './routes/calendar-solutions'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AboutIndexRouteImport } from './routes/about/index'
import { Route as DayDateRouteImport } from './routes/day/$date'

const ProfileDemoRoute = ProfileDemoRouteImport.update({
  id: '/profile-demo',
  path: '/profile-demo',
  getParentRoute: () => rootRouteImport,
} as any)
const LogEntryRoute = LogEntryRouteImport.update({
  id: '/log-entry',
  path: '/log-entry',
  getParentRoute: () => rootRouteImport,
} as any)
const CalendarSolutionsRoute = CalendarSolutionsRouteImport.update({
  id: '/calendar-solutions',
  path: '/calendar-solutions',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AboutIndexRoute = AboutIndexRouteImport.update({
  id: '/about/',
  path: '/about/',
  getParentRoute: () => rootRouteImport,
} as any)
const DayDateRoute = DayDateRouteImport.update({
  id: '/day/$date',
  path: '/day/$date',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/calendar-solutions': typeof CalendarSolutionsRoute
  '/log-entry': typeof LogEntryRoute
  '/profile-demo': typeof ProfileDemoRoute
  '/day/$date': typeof DayDateRoute
  '/about': typeof AboutIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/calendar-solutions': typeof CalendarSolutionsRoute
  '/log-entry': typeof LogEntryRoute
  '/profile-demo': typeof ProfileDemoRoute
  '/day/$date': typeof DayDateRoute
  '/about': typeof AboutIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/calendar-solutions': typeof CalendarSolutionsRoute
  '/log-entry': typeof LogEntryRoute
  '/profile-demo': typeof ProfileDemoRoute
  '/day/$date': typeof DayDateRoute
  '/about/': typeof AboutIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/calendar-solutions'
    | '/log-entry'
    | '/profile-demo'
    | '/day/$date'
    | '/about'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/calendar-solutions'
    | '/log-entry'
    | '/profile-demo'
    | '/day/$date'
    | '/about'
  id:
    | '__root__'
    | '/'
    | '/calendar-solutions'
    | '/log-entry'
    | '/profile-demo'
    | '/day/$date'
    | '/about/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  CalendarSolutionsRoute: typeof CalendarSolutionsRoute
  LogEntryRoute: typeof LogEntryRoute
  ProfileDemoRoute: typeof ProfileDemoRoute
  DayDateRoute: typeof DayDateRoute
  AboutIndexRoute: typeof AboutIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/profile-demo': {
      id: '/profile-demo'
      path: '/profile-demo'
      fullPath: '/profile-demo'
      preLoaderRoute: typeof ProfileDemoRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/log-entry': {
      id: '/log-entry'
      path: '/log-entry'
      fullPath: '/log-entry'
      preLoaderRoute: typeof LogEntryRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/calendar-solutions': {
      id: '/calendar-solutions'
      path: '/calendar-solutions'
      fullPath: '/calendar-solutions'
      preLoaderRoute: typeof CalendarSolutionsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/about/': {
      id: '/about/'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/day/$date': {
      id: '/day/$date'
      path: '/day/$date'
      fullPath: '/day/$date'
      preLoaderRoute: typeof DayDateRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  CalendarSolutionsRoute: CalendarSolutionsRoute,
  LogEntryRoute: LogEntryRoute,
  ProfileDemoRoute: ProfileDemoRoute,
  DayDateRoute: DayDateRoute,
  AboutIndexRoute: AboutIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
